#!/bin/bash

SERVERS=("game" "state" "billing")

S_RUNNING="running"
S_STOPPED="stopped"

error() {
    echo -ne "\033[40;31;1m"
    echo "$@"
    echo -ne "\033[0m"
}
info() {
    echo -ne "\033[40;32;1m"
    echo "$@"
    echo -ne "\033[0m"
}

status() {
    local pidfile=bin/shaco."$1".pid
    if [[ -f ${pidfile} ]]; then
        local pid=$(cat ${pidfile})
        if [[ -x /proc/$pid ]]; then
            echo ${S_RUNNING} $pid
        fi
    fi
    echo ${S_STOPPED}
}

start() {
    local name=$1
    local st=$(status ${name})
    if [[ "${st[0]}" == "${S_RUNNING}" ]]; then
        echo "${name} server is already running"
    else
        info "Starting ${name} server ..."    
        cd bin && ./shaco config_${name} --daemon 1
        sleep 1
        local pidfile=bin/shaco."${name}".pid
        while [[ ! -f ${pifile} ]]; do
            info "Waiting for ${name} to start ..."
            sleep 1
        done
        info "ok"
    fi
}

stop() {
    local name=$1
    local st=$(status ${name})
    if [[ "${st}" == "${S_STOPPED}" ]]; then
        echo "${name} server is already stopped"
    else
        local pid=${st[1]}
        info "Stopping ${name} server ..."
        while [[ -x /proc/$pid ]]; do
            info "Waiting for ${name} to shutdown ..."
            sleep 1
        done
        info "ok"
    fi
}

ls() {
    for v in "${SERVERS[@]}"; do
        echo $v && status $v
    done
}

usage() {
    cat <<EOF
Usage: $0 [options]
        start name          start the [name] server
         stop name          stop the [name] server
      restart name          restart the [name] server
EOF
}

CMD=$1
shift

case "$CMD" in
start) start "$@";;
stop) stop "$@";;
restart) stop "$@"; start "$@";;
status) status "$@";;
ls) ls "$@";;
*) usage;;
esac
